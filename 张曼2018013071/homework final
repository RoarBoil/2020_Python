import pymongo
import random

myclient = pymongo.MongoClient("mongodb://localhost:/")
mydb = myclient["dtBase"]
mycol = mydb["sites"]
mycol.drop()


def generate(datatype, datarange, amount, strlen=6):
    if datatype == int:
        while len(result) < amount:
            it = iter(datarange)
            item = random.randint(next(it), next(it))
            result.add(item)
            yield item
            continue
    elif datatype == float:
        while len(result) < amount:
            it = iter(datarange)
            item = random.uniform(next(it), next(it))
            result.add(item)
            yield item
            continue
    elif datatype == str:
        while len(result) < amount:
            item = ''.join(random.SystemRandom().choice(datarange) for _ in range(strlen))
            result.add(item)
            yield item
            continue


def datascreen(data, dataType, *args):
    s_result = set()
    for i in data:
        if (dataType == int):
            Range = iter(args)
            if (next(Range) <= i <= next(Range)):
                s_result.add(i)
        elif (dataType == float):
            Range = iter(args)
            if (next(Range) <= i <= next(Range)):
                s_result.add(i)
        elif (dataType == str):
            for target in args:
                if (target in i):
                    s_result.add(i)


return s_result


def apply():
    if (dataType == str):
        dataRange = input()
    else:
        dataRangeTop = int(dataRangeTop)
        dataRangeBottom = int(dataRangeBottom)
        dataRange = list()
        dataRange.append(dataRangeBottom)
        dataRange.append(dataRangeTop)
    example = generate(dataType, dataRange, dataAmount)
    result = set()
    while len(result) < dataAmount:
        result.add(next(example))
    if (dataType == str):
        s_result = screen(result, dataType, dataRange)
    else:
        dataRangeBottom2 = int(dataRangeBottom2)
        dataRangeTop2 = int(dataRangeTop2)
        s_result = screen(result, dataType, dataRangeBottom2, dataRangeTop2)
    mydic = {'type': dataType, 'data': s_result}
    mycol.insert_one(mydic)

except Exception as e:
      print(e)

apply()
