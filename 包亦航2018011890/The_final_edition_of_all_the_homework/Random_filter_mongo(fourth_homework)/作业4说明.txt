期末作业4：利用MongoDB进行随机数生成与筛选

运行方式：运行测试文件Mongo_dealer_test.py

文件说明：
1、Random_gener.py：随机数生成部分，和前两次作业使用的模块无异
2、Random_mongo_gener.py：这个文件被Random_gener.py修饰，用于将其返回的生成器中的数据加入MongoDB
3、Mongo_picker.py：在之前筛选基础上进行或改动，查询的对象变为了数据库
4、Mongo_dealer.py：对前面的一个生成一个筛选进行综合整合操作，并封装为类
5、Mongo_dealer_test.py：对其功能进行测试

程序说明：
1、这里是沿用之前核心模块的改动，再一次说明了python修饰特性的优越。这里在数据存储部分使用了作业三的数据生成器
每生成一条就加入一条
2、对于筛选部分，针对数据库和我们要的数据的特性，对int和float采用可以判断大小的高级搜索，对str采用正则表达式匹配
3、之后Mongo_dealer对两个类进行了统一操作，操作分为生成，筛选和清空

特别注意；
1、测试文件中有一个文件输出section，将其注释去掉将输出重定向到默认文件output.txt中，
并且由于直接对系统设置进行输出重定向，如果要回到原来的控制台输出需要重启编译器
2、需要首先开启MongoDB服务

程序功能介绍：
1、和之前相比很大的不同在于这里实现了数据生成和数据筛选的分离。我们可以多次生成再多次从中进行筛选
2、对MongoDB实例化的时候需要传入服务器地址，客户机名，集合名这些关于MongoDB的基本信息
3、Mongo_dealer中封装有gener函数，用于实现数据生成与入库。参数有datatype：需要生成的类型。
datarange：生成的范围。num：生成的个数。strlen：生成字符串的长度，int，float需要填入无意义符号占位
4、Mongo_dealer中封装有pick函数，用于实现数据筛选，需跟数据类型和筛选条件：对于int或者float型，
必须用'>'或'<'开头，表示需要大于或小于某数。对于str型，则用'A'或'O'开头，前者表示并列含有某几个字符串，后者表示
或关系含有几个字符串
5、Mongo_dealer中封装有dele函数，用于清楚该数据集合中的全部数据